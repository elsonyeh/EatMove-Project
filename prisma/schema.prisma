generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model member {
  mid            String          @id
  name           String?         @db.VarChar(100)
  address        String?
  createtime     DateTime?       @default(now()) @db.Timestamp(6)
  wallet         Decimal?        @db.Decimal(10, 2)
  phonenumber    String?         @db.VarChar(20)
  email          String?         @db.VarChar(100)
  introducer     Int?
  face_descriptor Float[]        // 使用空陣列表示沒有人臉辨識
}

model chat {
  cid     Int       @id
  did     Int?
  mid     Int?
  message String?
  time    DateTime? @default(now()) @db.Timestamp(6)
}

model deliveryman {
  did          Int     @id @default(autoincrement())
  dname        String? @db.VarChar(100)
  dphonenumber String? @db.VarChar(20)
  orders       order[]
}

model favoriteentry {
  listid Int
  rid    Int

  @@id([listid, rid])
  @@index([listid], map: "idx_favoriteentry_list")
}

model favoritelist {
  listid   Int     @id
  mid      Int?
  listname String? @db.VarChar(100)
}

model menu {
  rid         Int
  dishid      Int
  price       Decimal? @db.Decimal(10, 2)
  description String?
  image       String?  @db.VarChar(255)
  name        String?  @db.VarChar(100)
  category    String?  @db.VarChar(50)
  isavailable Boolean? @default(true)
  ispopular   Boolean? @default(false)
  restaurant  restaurant @relation(fields: [rid], references: [rid])

  @@id([rid, dishid])
  @@index([rid], map: "idx_menu_restaurant")
}

model order {
  oid                Int       @id
  did                Int?
  mid                Int?
  rid                Int?
  otime              DateTime? @default(now()) @db.Timestamp(6)
  restaurantfeedback String?
  deliveryfeedback   String?
  ostatus            String?   @db.VarChar(50)
  totalprice         Decimal?  @db.Decimal(10, 2)
  deliveredtime      DateTime? @db.Timestamp(6)
  pickuptime         DateTime? @db.Timestamp(6)
  oitemid            Int?
  deliveryman        deliveryman? @relation(fields: [did], references: [did])
  restaurant         restaurant?  @relation(fields: [rid], references: [rid])
  payments           payment[]

  @@index([mid], map: "idx_order_member")
  @@index([rid], map: "idx_order_restaurant")
  @@index([ostatus], map: "idx_order_status")
}

model payment {
  pid      Int       @id
  mid      Int?
  paytime  DateTime? @db.Timestamp(6)
  oid      Int?
  amount   Decimal?  @db.Decimal(10, 2)
  category String?   @db.VarChar(20)
  order    order?    @relation(fields: [oid], references: [oid])

  @@index([oid], map: "idx_payment_order")
}

model restaurant {
  rid          Int     @id @default(autoincrement())
  rname        String? @db.VarChar(100)
  raddress     String?
  description  String?
  rphonenumber String? @db.VarChar(20)
  remail       String? @db.VarChar(100)
  rpassword    String? @db.VarChar(100)
  account      String? @unique @db.VarChar(255)
  menu         menu[]
  orders       order[]
}

model restaurants {
  id       Int     @id @default(autoincrement())
  name     String?
  account  String?
  password String?
}

model users {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
}
